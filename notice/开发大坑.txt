1.oracle中，null和任意匹配都是false
例如：1 = null	false
          1 != null	false

2.js
在javascript中使用parseInt()函数转换成整数时会遇到以下这种情况：
使用parseInt()转换'01'~'07'时可以转换成整数1~7，而转换'08'和'09'时，就会出现转换结果不是7和8，而是为'0'的情况，不熟悉parseInt()函数的人会很奇怪为什么结果会变成0呢？出现这种情况是因为我们平时使用parseInt()函数的时候忽略了它的参数，
parseInt ( String s , [ int radix ] )，用于解析一个字符串，并返回一个整数。
第一个参数表示要被解析的字符串。，第二个参数是可选，表示要解析的数字的基数(就是说明参数是几进制的)，其值介于 2 ~ 36 之间，如果该参数小于 2 或者大于 36，则 parseInt() 将返回 NaN。
如果第二个参数radix不写，会自动识别string的格式： 
以 "0x"或"0x" 开头，parseInt() 会把 string 除0x外的其余部分当作十六进制数， 
以 "0" 开头，parseInt() 会把 string 除0外的字符当作八进制， 
以 1 ~ 9 的数字开头，parseInt() 将把它当作十进制数。
看到这里，应该明白为什么parseInt("08")返回的不是8了吧，因为把它当八进制了，而八进制是没有8的，所以要想得到8，那就parseInt("08",10)。 
为了避免parseInt("08")得到0这样而不是8的问题存在，在任何使用parseInt的地方都明确指定要转换的格式，即使parseInt("5")，也要写成parseInt("5",10)，养成一个好的惯。